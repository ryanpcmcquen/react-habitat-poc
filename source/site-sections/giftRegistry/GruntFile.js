module.exports = function(grunt) {
	require("matchdep")
		.filterDev("grunt-*")
		.forEach(grunt.loadNpmTasks);
	grunt.initConfig({
		pkg: grunt.file.readJSON("package.json"),
		notify_hooks: {
			options: {
				enabled: true,
				max_jshint_notifications: 5,
				title: "Sur la table - Gift Registry"
			}
		},

		//- Concat JS into single files
		concat: {
			giftRegistry: {
				src: ["../bower_components/jquery-ui/jquery-ui.js", "js/*.js"],
				dest: "js/.giftRegistry.concat.js"
			}
		},

		copy: {
			dev: {
				files: [
					{
						cwd: "js",
						expand: true,
						src: ".flipbook.concat.js",
						dest:
							"../../modules/Store/docroot/scripts/giftRegistry/",
						rename: function(dest, src) {
							return dest + "giftRegistry.min.js";
						}
					}
				]
			}
		},

		//- Uglify concatenated and other JS files
		uglify: {
			options: {
				banner:
					"/**\n * !!! IMPORTANT !!!\n\n * DO NOT EDIT THIS FILE DIRECTLY. \n * Go to: /working/code/[your release]/SurLaTable/workspace/ui_sources/shared/\n\n * Then edit proper js file and run grunt from shared folder.\n**/;\n\n"
			},
			giftRegistry: {
				files: {
					"../../modules/Store/docroot/scripts/giftRegistry/giftRegistry.min.js": [
						"<%= concat.giftRegistry.dest %>"
					]
				}
			}
		},

		//- Compile SASS
		sass: {
			dist: {
				options: {
					outputStyle: "compressed"
				},
				files: [
					{
						expand: true,
						flatten: true,
						src: "sass/*.scss",
						dest:
							"../../modules/Store/docroot/styles/giftRegistry/",
						ext: ".css"
					}
				]
			}
		},
		selector4096: {
			all: ["../../modules/Store/docroot/styles/giftRegistry/*.css"]
		},
		clean: ["<%= concat.giftRegistry.dest %>"],

		//- Notify when task is complete
		notify: {
			css_compile: {
				options: {
					title: "Sass", // optional
					message: "Compile was successful" //required
				}
			},
			scripts_change: {
				options: {
					title: "Javascript", // optional
					message: "Concatenated and minifed successfully" //required
				}
			}
		},

		//- Watchers
		watch: {
			grunt: {
				files: ["GruntFile.js"],
				tasks: ["dev"]
			},

			js: {
				files: ["<%= concat.giftRegistry.src %>"],
				tasks: ["notify:scripts_change", "scripts_change"]
			},

			sass: {
				files: ["sass/**/*.scss"],
				tasks: ["notify:css_compile", "sass_change"]
			}
		}
	});

	//- REGISTER THE TASKS
	grunt.task.run("notify_hooks");
	grunt.registerTask("default", ["sass", "concat", "uglify"]);
	grunt.registerTask("dev", ["sass", "concat", "copy", "watch"]);
	grunt.registerTask("scripts_change", [
		"concat:giftRegistry",
		"copy" /*,
        'uglify:plugins',
        'uglify:scripts',
        'uglify:components',
        'uglify:cart'*/
	]);
	grunt.registerTask("sass_change", ["sass:dist"]);
	grunt.registerTask("concat_change", [
		//'uglify:scripts'
	]);
};
